version: '3.8'

services:
  # MySQL Database
  mysql:
    image: mysql:8.0
    container_name: mini-crm-mysql
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: password
      MYSQL_DATABASE: mini_crm
      MYSQL_USER: mini_crm
      MYSQL_PASSWORD: mini_crm_password
    ports:
      - "3307:3306"
    volumes:
      - mysql_data:/var/lib/mysql
      - ./infra/mysql/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - mini-crm-network

  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: mini-crm-redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - mini-crm-network

  # Backend API
  backend:
    build:
      context: ./backend
      dockerfile: ../infra/docker/backend.Dockerfile
    container_name: mini-crm-backend
    restart: unless-stopped
    environment:
      NODE_ENV: production
      DATABASE_URL: mysql://mini_crm:mini_crm_password@mysql:3306/mini_crm
      REDIS_URL: redis://redis:6379
      JWT_SECRET: "44a03fb708ab9c51fd8de2dd18a27ecd8e655f20f8780d48b1c50cd023cafcfad2ba01f241ab10e6b9579d15a726c5bda12e218b00a26adddc83636136e2df0f"

      GOOGLE_CLIENT_ID: "your-google-client-id-here"
      GOOGLE_CLIENT_SECRET: "your-google-client-secret-here"

      OPENAI_API_KEY: "your-openai-api-key-here"

      API_PORT: 3001
      FRONTEND_URL: http://localhost:3000
      VENDOR_API_URL: http://vendor:3002
    ports:
      - "3001:3001"
    depends_on:
      - mysql
      - redis
    networks:
      - mini-crm-network
    volumes:
      - ./backend/logs:/app/logs

  # Frontend
  frontend:
    build:
      context: ./frontend
      dockerfile: ../infra/docker/frontend.Dockerfile
      args:
        NEXT_PUBLIC_API_URL: http://localhost:3001
                NEXT_PUBLIC_GOOGLE_CLIENT_ID: "your-google-client-id-here"
    container_name: mini-crm-frontend
    restart: unless-stopped
    environment:
      NEXT_PUBLIC_API_URL: http://localhost:3001
                NEXT_PUBLIC_GOOGLE_CLIENT_ID: "your-google-client-id-here"
    ports:
      - "3000:3000"
    depends_on:
      - backend
    networks:
      - mini-crm-network

  # Vendor Simulator
  vendor:
    build:
      context: ./vendor-simulator
      dockerfile: ../infra/docker/vendor.Dockerfile
    container_name: mini-crm-vendor
    restart: unless-stopped
    environment:
      PORT: 3002
      CRM_API_URL: http://backend:3001
    ports:
      - "3002:3002"
    depends_on:
      - backend
    networks:
      - mini-crm-network

  # Nginx Reverse Proxy (Optional)
  nginx:
    image: nginx:alpine
    container_name: mini-crm-nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./infra/nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./infra/nginx/ssl:/etc/nginx/ssl
    depends_on:
      - frontend
      - backend
      - vendor
    networks:
      - mini-crm-network

volumes:
  mysql_data:
  redis_data:

networks:
  mini-crm-network:
    driver: bridge
